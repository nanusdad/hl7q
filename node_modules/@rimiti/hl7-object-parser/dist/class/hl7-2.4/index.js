'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor)
                descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function (Constructor, protoProps, staticProps) {
        if (protoProps)
            defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
            defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();

var _simpleHl = require('simple-hl7');

var _simpleHl2 = _interopRequireDefault(_simpleHl);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var hl7 = function () {
    function hl7(message, config) {
        _classCallCheck(this, hl7);
        var hl7Parser = new _simpleHl2.default.Parser();
        message = hl7Parser.parse(message);

        for (var j = 0; j < message.segments.length; j++) {
            if (message.segments[j].name == 'OBX') {
                message.segments[j].name = 'OBX1';
                message.segments[j + 1].name = 'OBX2';
                message.segments[j + 2].name = 'OBX3';
                message.segments[j + 3].name = 'OBX4';
                message.segments[j + 4].name = 'OBX5';
                message.segments[j + 5].name = 'OBX6';
                message.segments[j + 6].name = 'OBX7';
                break;
            }
        }

        this._message = message;
        this._config = config;
        // console.log('\n---message start---\n', this._message, '\n---message end---\n');
        // console.log('----------------------------------------------------------');
        // console.log('\n---config start---\n', this._config, '\n---config end---\n');
    }

    /**
     * @description Convert from config mapping file hl7 to object
     * @return {{}}
     */

    _createClass(hl7, [{
        key: 'process',
        value: function process() {
            var obj = {};
            for (var segment in this._config.mapping) {
                var s = segment.toUpperCase() === 'MSH' ? this._message.header : this._message.getSegment(segment.toUpperCase());
                var _iteratorNormalCompletion = true;
                var _didIteratorError = false;
                var _iteratorError = undefined;

                try {
                    for (var _iterator = this._config.mapping[segment].values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                        var value = _step.value;

                        if (value.field && s instanceof Object) {
                            var index1 = value.component[0];
                            var index2 = value.component[1];

                            if (s.getField(index1).includes('~')) {
                                var split = s.getField(index1).split('~');
                                var array = [];
                                var _iteratorNormalCompletion2 = true;
                                var _didIteratorError2 = false;
                                var _iteratorError2 = undefined;

                                try {
                                    for (var _iterator2 = split[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                                        var _v = _step2.value;

                                        array.push(_v.split('^'));
                                    }
                                } catch (err) {
                                    _didIteratorError2 = true;
                                    _iteratorError2 = err;
                                } finally {
                                    try {
                                        if (!_iteratorNormalCompletion2 && _iterator2.return) {
                                            _iterator2.return();
                                        }
                                    } finally {
                                        if (_didIteratorError2) {
                                            throw _iteratorError2;
                                        }
                                    }
                                }

                                var output = [];
                                for (var v in array) {
                                    array[v][value.component[1] - 1] ? output.push(array[v][value.component[1] - 1]) : output.push('');
                                }
                                this._generateObject(obj, value.field, output);
                            } else {
                                this._generateObject(obj, value.field, s.getComponent(index1, index2));
                            }
                        }
                    }
                } catch (err) {
                    _didIteratorError = true;
                    _iteratorError = err;
                } finally {
                    try {
                        if (!_iteratorNormalCompletion && _iterator.return) {
                            _iterator.return();
                        }
                    } finally {
                        if (_didIteratorError) {
                            throw _iteratorError;
                        }
                    }
                }
            }
            return obj;
        }

        /**
         * @description Add attribute(s) into existing object
         * @param obj
         * @param property
         * @param value
         * @private
         */

    }, {
        key: '_generateObject',
        value: function _generateObject(obj, property, value) {
            var paths = property.split('.');
            var i = 0;
            var tmp = obj;
            for (; i < paths.length - 1; i++) {
                tmp = tmp[paths[i]] ? Object.assign(tmp[paths[i]], tmp[paths[i]]) : tmp[paths[i]] = {};
            }
            tmp[paths[i]] = value;
        }
    }]);

    return hl7;
}();

exports.default = hl7;
//# sourceMappingURL=index.js.map
